// Mocks generated by Mockito 5.4.2 from annotations
// in clearassistapp/test/s3_connection_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:aws_s3_api/s3-2006-03-01.dart' as _i2;
import 'package:clearassistapp/src/s3_connection.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAbortMultipartUploadOutput_0 extends _i1.SmartFake
    implements _i2.AbortMultipartUploadOutput {
  _FakeAbortMultipartUploadOutput_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompleteMultipartUploadOutput_1 extends _i1.SmartFake
    implements _i2.CompleteMultipartUploadOutput {
  _FakeCompleteMultipartUploadOutput_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCopyObjectOutput_2 extends _i1.SmartFake
    implements _i2.CopyObjectOutput {
  _FakeCopyObjectOutput_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateBucketOutput_3 extends _i1.SmartFake
    implements _i2.CreateBucketOutput {
  _FakeCreateBucketOutput_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateMultipartUploadOutput_4 extends _i1.SmartFake
    implements _i2.CreateMultipartUploadOutput {
  _FakeCreateMultipartUploadOutput_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteObjectOutput_5 extends _i1.SmartFake
    implements _i2.DeleteObjectOutput {
  _FakeDeleteObjectOutput_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteObjectTaggingOutput_6 extends _i1.SmartFake
    implements _i2.DeleteObjectTaggingOutput {
  _FakeDeleteObjectTaggingOutput_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteObjectsOutput_7 extends _i1.SmartFake
    implements _i2.DeleteObjectsOutput {
  _FakeDeleteObjectsOutput_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketAccelerateConfigurationOutput_8 extends _i1.SmartFake
    implements _i2.GetBucketAccelerateConfigurationOutput {
  _FakeGetBucketAccelerateConfigurationOutput_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketAclOutput_9 extends _i1.SmartFake
    implements _i2.GetBucketAclOutput {
  _FakeGetBucketAclOutput_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketAnalyticsConfigurationOutput_10 extends _i1.SmartFake
    implements _i2.GetBucketAnalyticsConfigurationOutput {
  _FakeGetBucketAnalyticsConfigurationOutput_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketCorsOutput_11 extends _i1.SmartFake
    implements _i2.GetBucketCorsOutput {
  _FakeGetBucketCorsOutput_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketEncryptionOutput_12 extends _i1.SmartFake
    implements _i2.GetBucketEncryptionOutput {
  _FakeGetBucketEncryptionOutput_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketIntelligentTieringConfigurationOutput_13 extends _i1
    .SmartFake implements _i2.GetBucketIntelligentTieringConfigurationOutput {
  _FakeGetBucketIntelligentTieringConfigurationOutput_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketInventoryConfigurationOutput_14 extends _i1.SmartFake
    implements _i2.GetBucketInventoryConfigurationOutput {
  _FakeGetBucketInventoryConfigurationOutput_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketLifecycleOutput_15 extends _i1.SmartFake
    implements _i2.GetBucketLifecycleOutput {
  _FakeGetBucketLifecycleOutput_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketLifecycleConfigurationOutput_16 extends _i1.SmartFake
    implements _i2.GetBucketLifecycleConfigurationOutput {
  _FakeGetBucketLifecycleConfigurationOutput_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketLocationOutput_17 extends _i1.SmartFake
    implements _i2.GetBucketLocationOutput {
  _FakeGetBucketLocationOutput_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketLoggingOutput_18 extends _i1.SmartFake
    implements _i2.GetBucketLoggingOutput {
  _FakeGetBucketLoggingOutput_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketMetricsConfigurationOutput_19 extends _i1.SmartFake
    implements _i2.GetBucketMetricsConfigurationOutput {
  _FakeGetBucketMetricsConfigurationOutput_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationConfigurationDeprecated_20 extends _i1.SmartFake
    implements _i2.NotificationConfigurationDeprecated {
  _FakeNotificationConfigurationDeprecated_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationConfiguration_21 extends _i1.SmartFake
    implements _i2.NotificationConfiguration {
  _FakeNotificationConfiguration_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketOwnershipControlsOutput_22 extends _i1.SmartFake
    implements _i2.GetBucketOwnershipControlsOutput {
  _FakeGetBucketOwnershipControlsOutput_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketPolicyOutput_23 extends _i1.SmartFake
    implements _i2.GetBucketPolicyOutput {
  _FakeGetBucketPolicyOutput_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketPolicyStatusOutput_24 extends _i1.SmartFake
    implements _i2.GetBucketPolicyStatusOutput {
  _FakeGetBucketPolicyStatusOutput_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketReplicationOutput_25 extends _i1.SmartFake
    implements _i2.GetBucketReplicationOutput {
  _FakeGetBucketReplicationOutput_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketRequestPaymentOutput_26 extends _i1.SmartFake
    implements _i2.GetBucketRequestPaymentOutput {
  _FakeGetBucketRequestPaymentOutput_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketTaggingOutput_27 extends _i1.SmartFake
    implements _i2.GetBucketTaggingOutput {
  _FakeGetBucketTaggingOutput_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketVersioningOutput_28 extends _i1.SmartFake
    implements _i2.GetBucketVersioningOutput {
  _FakeGetBucketVersioningOutput_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBucketWebsiteOutput_29 extends _i1.SmartFake
    implements _i2.GetBucketWebsiteOutput {
  _FakeGetBucketWebsiteOutput_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetObjectOutput_30 extends _i1.SmartFake
    implements _i2.GetObjectOutput {
  _FakeGetObjectOutput_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetObjectAclOutput_31 extends _i1.SmartFake
    implements _i2.GetObjectAclOutput {
  _FakeGetObjectAclOutput_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetObjectLegalHoldOutput_32 extends _i1.SmartFake
    implements _i2.GetObjectLegalHoldOutput {
  _FakeGetObjectLegalHoldOutput_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetObjectLockConfigurationOutput_33 extends _i1.SmartFake
    implements _i2.GetObjectLockConfigurationOutput {
  _FakeGetObjectLockConfigurationOutput_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetObjectRetentionOutput_34 extends _i1.SmartFake
    implements _i2.GetObjectRetentionOutput {
  _FakeGetObjectRetentionOutput_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetObjectTaggingOutput_35 extends _i1.SmartFake
    implements _i2.GetObjectTaggingOutput {
  _FakeGetObjectTaggingOutput_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetObjectTorrentOutput_36 extends _i1.SmartFake
    implements _i2.GetObjectTorrentOutput {
  _FakeGetObjectTorrentOutput_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPublicAccessBlockOutput_37 extends _i1.SmartFake
    implements _i2.GetPublicAccessBlockOutput {
  _FakeGetPublicAccessBlockOutput_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHeadObjectOutput_38 extends _i1.SmartFake
    implements _i2.HeadObjectOutput {
  _FakeHeadObjectOutput_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListBucketAnalyticsConfigurationsOutput_39 extends _i1.SmartFake
    implements _i2.ListBucketAnalyticsConfigurationsOutput {
  _FakeListBucketAnalyticsConfigurationsOutput_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListBucketIntelligentTieringConfigurationsOutput_40 extends _i1
    .SmartFake implements _i2.ListBucketIntelligentTieringConfigurationsOutput {
  _FakeListBucketIntelligentTieringConfigurationsOutput_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListBucketInventoryConfigurationsOutput_41 extends _i1.SmartFake
    implements _i2.ListBucketInventoryConfigurationsOutput {
  _FakeListBucketInventoryConfigurationsOutput_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListBucketMetricsConfigurationsOutput_42 extends _i1.SmartFake
    implements _i2.ListBucketMetricsConfigurationsOutput {
  _FakeListBucketMetricsConfigurationsOutput_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListBucketsOutput_43 extends _i1.SmartFake
    implements _i2.ListBucketsOutput {
  _FakeListBucketsOutput_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListMultipartUploadsOutput_44 extends _i1.SmartFake
    implements _i2.ListMultipartUploadsOutput {
  _FakeListMultipartUploadsOutput_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListObjectVersionsOutput_45 extends _i1.SmartFake
    implements _i2.ListObjectVersionsOutput {
  _FakeListObjectVersionsOutput_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListObjectsOutput_46 extends _i1.SmartFake
    implements _i2.ListObjectsOutput {
  _FakeListObjectsOutput_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListObjectsV2Output_47 extends _i1.SmartFake
    implements _i2.ListObjectsV2Output {
  _FakeListObjectsV2Output_47(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListPartsOutput_48 extends _i1.SmartFake
    implements _i2.ListPartsOutput {
  _FakeListPartsOutput_48(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePutObjectOutput_49 extends _i1.SmartFake
    implements _i2.PutObjectOutput {
  _FakePutObjectOutput_49(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePutObjectAclOutput_50 extends _i1.SmartFake
    implements _i2.PutObjectAclOutput {
  _FakePutObjectAclOutput_50(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePutObjectLegalHoldOutput_51 extends _i1.SmartFake
    implements _i2.PutObjectLegalHoldOutput {
  _FakePutObjectLegalHoldOutput_51(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePutObjectLockConfigurationOutput_52 extends _i1.SmartFake
    implements _i2.PutObjectLockConfigurationOutput {
  _FakePutObjectLockConfigurationOutput_52(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePutObjectRetentionOutput_53 extends _i1.SmartFake
    implements _i2.PutObjectRetentionOutput {
  _FakePutObjectRetentionOutput_53(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePutObjectTaggingOutput_54 extends _i1.SmartFake
    implements _i2.PutObjectTaggingOutput {
  _FakePutObjectTaggingOutput_54(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestoreObjectOutput_55 extends _i1.SmartFake
    implements _i2.RestoreObjectOutput {
  _FakeRestoreObjectOutput_55(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectObjectContentOutput_56 extends _i1.SmartFake
    implements _i2.SelectObjectContentOutput {
  _FakeSelectObjectContentOutput_56(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUploadPartOutput_57 extends _i1.SmartFake
    implements _i2.UploadPartOutput {
  _FakeUploadPartOutput_57(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUploadPartCopyOutput_58 extends _i1.SmartFake
    implements _i2.UploadPartCopyOutput {
  _FakeUploadPartCopyOutput_58(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [S3Bucket].
///
/// See the documentation for Mockito's code generation for more information.
class MockS3Bucket extends _i1.Mock implements _i3.S3Bucket {
  @override
  set connection(_i2.S3? _connection) => super.noSuchMethod(
        Invocation.setter(
          #connection,
          _connection,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> startService() => (super.noSuchMethod(
        Invocation.method(
          #startService,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void createBucket() => super.noSuchMethod(
        Invocation.method(
          #createBucket,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<String> addAudioToS3(
    String? title,
    String? localPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAudioToS3,
          [
            title,
            localPath,
          ],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> addVideoToS3(
    String? title,
    String? localPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addVideoToS3,
          [
            title,
            localPath,
          ],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
}

/// A class which mocks [S3].
///
/// See the documentation for Mockito's code generation for more information.
class MockS3 extends _i1.Mock implements _i2.S3 {
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<_i2.AbortMultipartUploadOutput> abortMultipartUpload({
    required String? bucket,
    required String? key,
    required String? uploadId,
    String? expectedBucketOwner,
    _i2.RequestPayer? requestPayer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #abortMultipartUpload,
          [],
          {
            #bucket: bucket,
            #key: key,
            #uploadId: uploadId,
            #expectedBucketOwner: expectedBucketOwner,
            #requestPayer: requestPayer,
          },
        ),
        returnValue: _i4.Future<_i2.AbortMultipartUploadOutput>.value(
            _FakeAbortMultipartUploadOutput_0(
          this,
          Invocation.method(
            #abortMultipartUpload,
            [],
            {
              #bucket: bucket,
              #key: key,
              #uploadId: uploadId,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.AbortMultipartUploadOutput>.value(
                _FakeAbortMultipartUploadOutput_0(
          this,
          Invocation.method(
            #abortMultipartUpload,
            [],
            {
              #bucket: bucket,
              #key: key,
              #uploadId: uploadId,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
            },
          ),
        )),
      ) as _i4.Future<_i2.AbortMultipartUploadOutput>);

  @override
  _i4.Future<_i2.CompleteMultipartUploadOutput> completeMultipartUpload({
    required String? bucket,
    required String? key,
    required String? uploadId,
    String? expectedBucketOwner,
    _i2.CompletedMultipartUpload? multipartUpload,
    _i2.RequestPayer? requestPayer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeMultipartUpload,
          [],
          {
            #bucket: bucket,
            #key: key,
            #uploadId: uploadId,
            #expectedBucketOwner: expectedBucketOwner,
            #multipartUpload: multipartUpload,
            #requestPayer: requestPayer,
          },
        ),
        returnValue: _i4.Future<_i2.CompleteMultipartUploadOutput>.value(
            _FakeCompleteMultipartUploadOutput_1(
          this,
          Invocation.method(
            #completeMultipartUpload,
            [],
            {
              #bucket: bucket,
              #key: key,
              #uploadId: uploadId,
              #expectedBucketOwner: expectedBucketOwner,
              #multipartUpload: multipartUpload,
              #requestPayer: requestPayer,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.CompleteMultipartUploadOutput>.value(
                _FakeCompleteMultipartUploadOutput_1(
          this,
          Invocation.method(
            #completeMultipartUpload,
            [],
            {
              #bucket: bucket,
              #key: key,
              #uploadId: uploadId,
              #expectedBucketOwner: expectedBucketOwner,
              #multipartUpload: multipartUpload,
              #requestPayer: requestPayer,
            },
          ),
        )),
      ) as _i4.Future<_i2.CompleteMultipartUploadOutput>);

  @override
  _i4.Future<_i2.CopyObjectOutput> copyObject({
    required String? bucket,
    required String? copySource,
    required String? key,
    _i2.ObjectCannedACL? acl,
    bool? bucketKeyEnabled,
    String? cacheControl,
    String? contentDisposition,
    String? contentEncoding,
    String? contentLanguage,
    String? contentType,
    String? copySourceIfMatch,
    DateTime? copySourceIfModifiedSince,
    String? copySourceIfNoneMatch,
    DateTime? copySourceIfUnmodifiedSince,
    String? copySourceSSECustomerAlgorithm,
    _i5.Uint8List? copySourceSSECustomerKey,
    String? copySourceSSECustomerKeyMD5,
    String? expectedBucketOwner,
    String? expectedSourceBucketOwner,
    DateTime? expires,
    String? grantFullControl,
    String? grantRead,
    String? grantReadACP,
    String? grantWriteACP,
    Map<String, String>? metadata,
    _i2.MetadataDirective? metadataDirective,
    _i2.ObjectLockLegalHoldStatus? objectLockLegalHoldStatus,
    _i2.ObjectLockMode? objectLockMode,
    DateTime? objectLockRetainUntilDate,
    _i2.RequestPayer? requestPayer,
    String? sSECustomerAlgorithm,
    _i5.Uint8List? sSECustomerKey,
    String? sSECustomerKeyMD5,
    String? sSEKMSEncryptionContext,
    String? sSEKMSKeyId,
    _i2.ServerSideEncryption? serverSideEncryption,
    _i2.StorageClass? storageClass,
    String? tagging,
    _i2.TaggingDirective? taggingDirective,
    String? websiteRedirectLocation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyObject,
          [],
          {
            #bucket: bucket,
            #copySource: copySource,
            #key: key,
            #acl: acl,
            #bucketKeyEnabled: bucketKeyEnabled,
            #cacheControl: cacheControl,
            #contentDisposition: contentDisposition,
            #contentEncoding: contentEncoding,
            #contentLanguage: contentLanguage,
            #contentType: contentType,
            #copySourceIfMatch: copySourceIfMatch,
            #copySourceIfModifiedSince: copySourceIfModifiedSince,
            #copySourceIfNoneMatch: copySourceIfNoneMatch,
            #copySourceIfUnmodifiedSince: copySourceIfUnmodifiedSince,
            #copySourceSSECustomerAlgorithm: copySourceSSECustomerAlgorithm,
            #copySourceSSECustomerKey: copySourceSSECustomerKey,
            #copySourceSSECustomerKeyMD5: copySourceSSECustomerKeyMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #expectedSourceBucketOwner: expectedSourceBucketOwner,
            #expires: expires,
            #grantFullControl: grantFullControl,
            #grantRead: grantRead,
            #grantReadACP: grantReadACP,
            #grantWriteACP: grantWriteACP,
            #metadata: metadata,
            #metadataDirective: metadataDirective,
            #objectLockLegalHoldStatus: objectLockLegalHoldStatus,
            #objectLockMode: objectLockMode,
            #objectLockRetainUntilDate: objectLockRetainUntilDate,
            #requestPayer: requestPayer,
            #sSECustomerAlgorithm: sSECustomerAlgorithm,
            #sSECustomerKey: sSECustomerKey,
            #sSECustomerKeyMD5: sSECustomerKeyMD5,
            #sSEKMSEncryptionContext: sSEKMSEncryptionContext,
            #sSEKMSKeyId: sSEKMSKeyId,
            #serverSideEncryption: serverSideEncryption,
            #storageClass: storageClass,
            #tagging: tagging,
            #taggingDirective: taggingDirective,
            #websiteRedirectLocation: websiteRedirectLocation,
          },
        ),
        returnValue:
            _i4.Future<_i2.CopyObjectOutput>.value(_FakeCopyObjectOutput_2(
          this,
          Invocation.method(
            #copyObject,
            [],
            {
              #bucket: bucket,
              #copySource: copySource,
              #key: key,
              #acl: acl,
              #bucketKeyEnabled: bucketKeyEnabled,
              #cacheControl: cacheControl,
              #contentDisposition: contentDisposition,
              #contentEncoding: contentEncoding,
              #contentLanguage: contentLanguage,
              #contentType: contentType,
              #copySourceIfMatch: copySourceIfMatch,
              #copySourceIfModifiedSince: copySourceIfModifiedSince,
              #copySourceIfNoneMatch: copySourceIfNoneMatch,
              #copySourceIfUnmodifiedSince: copySourceIfUnmodifiedSince,
              #copySourceSSECustomerAlgorithm: copySourceSSECustomerAlgorithm,
              #copySourceSSECustomerKey: copySourceSSECustomerKey,
              #copySourceSSECustomerKeyMD5: copySourceSSECustomerKeyMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #expectedSourceBucketOwner: expectedSourceBucketOwner,
              #expires: expires,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWriteACP: grantWriteACP,
              #metadata: metadata,
              #metadataDirective: metadataDirective,
              #objectLockLegalHoldStatus: objectLockLegalHoldStatus,
              #objectLockMode: objectLockMode,
              #objectLockRetainUntilDate: objectLockRetainUntilDate,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #sSEKMSEncryptionContext: sSEKMSEncryptionContext,
              #sSEKMSKeyId: sSEKMSKeyId,
              #serverSideEncryption: serverSideEncryption,
              #storageClass: storageClass,
              #tagging: tagging,
              #taggingDirective: taggingDirective,
              #websiteRedirectLocation: websiteRedirectLocation,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.CopyObjectOutput>.value(_FakeCopyObjectOutput_2(
          this,
          Invocation.method(
            #copyObject,
            [],
            {
              #bucket: bucket,
              #copySource: copySource,
              #key: key,
              #acl: acl,
              #bucketKeyEnabled: bucketKeyEnabled,
              #cacheControl: cacheControl,
              #contentDisposition: contentDisposition,
              #contentEncoding: contentEncoding,
              #contentLanguage: contentLanguage,
              #contentType: contentType,
              #copySourceIfMatch: copySourceIfMatch,
              #copySourceIfModifiedSince: copySourceIfModifiedSince,
              #copySourceIfNoneMatch: copySourceIfNoneMatch,
              #copySourceIfUnmodifiedSince: copySourceIfUnmodifiedSince,
              #copySourceSSECustomerAlgorithm: copySourceSSECustomerAlgorithm,
              #copySourceSSECustomerKey: copySourceSSECustomerKey,
              #copySourceSSECustomerKeyMD5: copySourceSSECustomerKeyMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #expectedSourceBucketOwner: expectedSourceBucketOwner,
              #expires: expires,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWriteACP: grantWriteACP,
              #metadata: metadata,
              #metadataDirective: metadataDirective,
              #objectLockLegalHoldStatus: objectLockLegalHoldStatus,
              #objectLockMode: objectLockMode,
              #objectLockRetainUntilDate: objectLockRetainUntilDate,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #sSEKMSEncryptionContext: sSEKMSEncryptionContext,
              #sSEKMSKeyId: sSEKMSKeyId,
              #serverSideEncryption: serverSideEncryption,
              #storageClass: storageClass,
              #tagging: tagging,
              #taggingDirective: taggingDirective,
              #websiteRedirectLocation: websiteRedirectLocation,
            },
          ),
        )),
      ) as _i4.Future<_i2.CopyObjectOutput>);

  @override
  _i4.Future<_i2.CreateBucketOutput> createBucket({
    required String? bucket,
    _i2.BucketCannedACL? acl,
    _i2.CreateBucketConfiguration? createBucketConfiguration,
    String? grantFullControl,
    String? grantRead,
    String? grantReadACP,
    String? grantWrite,
    String? grantWriteACP,
    bool? objectLockEnabledForBucket,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createBucket,
          [],
          {
            #bucket: bucket,
            #acl: acl,
            #createBucketConfiguration: createBucketConfiguration,
            #grantFullControl: grantFullControl,
            #grantRead: grantRead,
            #grantReadACP: grantReadACP,
            #grantWrite: grantWrite,
            #grantWriteACP: grantWriteACP,
            #objectLockEnabledForBucket: objectLockEnabledForBucket,
          },
        ),
        returnValue:
            _i4.Future<_i2.CreateBucketOutput>.value(_FakeCreateBucketOutput_3(
          this,
          Invocation.method(
            #createBucket,
            [],
            {
              #bucket: bucket,
              #acl: acl,
              #createBucketConfiguration: createBucketConfiguration,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWrite: grantWrite,
              #grantWriteACP: grantWriteACP,
              #objectLockEnabledForBucket: objectLockEnabledForBucket,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.CreateBucketOutput>.value(_FakeCreateBucketOutput_3(
          this,
          Invocation.method(
            #createBucket,
            [],
            {
              #bucket: bucket,
              #acl: acl,
              #createBucketConfiguration: createBucketConfiguration,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWrite: grantWrite,
              #grantWriteACP: grantWriteACP,
              #objectLockEnabledForBucket: objectLockEnabledForBucket,
            },
          ),
        )),
      ) as _i4.Future<_i2.CreateBucketOutput>);

  @override
  _i4.Future<_i2.CreateMultipartUploadOutput> createMultipartUpload({
    required String? bucket,
    required String? key,
    _i2.ObjectCannedACL? acl,
    bool? bucketKeyEnabled,
    String? cacheControl,
    String? contentDisposition,
    String? contentEncoding,
    String? contentLanguage,
    String? contentType,
    String? expectedBucketOwner,
    DateTime? expires,
    String? grantFullControl,
    String? grantRead,
    String? grantReadACP,
    String? grantWriteACP,
    Map<String, String>? metadata,
    _i2.ObjectLockLegalHoldStatus? objectLockLegalHoldStatus,
    _i2.ObjectLockMode? objectLockMode,
    DateTime? objectLockRetainUntilDate,
    _i2.RequestPayer? requestPayer,
    String? sSECustomerAlgorithm,
    _i5.Uint8List? sSECustomerKey,
    String? sSECustomerKeyMD5,
    String? sSEKMSEncryptionContext,
    String? sSEKMSKeyId,
    _i2.ServerSideEncryption? serverSideEncryption,
    _i2.StorageClass? storageClass,
    String? tagging,
    String? websiteRedirectLocation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMultipartUpload,
          [],
          {
            #bucket: bucket,
            #key: key,
            #acl: acl,
            #bucketKeyEnabled: bucketKeyEnabled,
            #cacheControl: cacheControl,
            #contentDisposition: contentDisposition,
            #contentEncoding: contentEncoding,
            #contentLanguage: contentLanguage,
            #contentType: contentType,
            #expectedBucketOwner: expectedBucketOwner,
            #expires: expires,
            #grantFullControl: grantFullControl,
            #grantRead: grantRead,
            #grantReadACP: grantReadACP,
            #grantWriteACP: grantWriteACP,
            #metadata: metadata,
            #objectLockLegalHoldStatus: objectLockLegalHoldStatus,
            #objectLockMode: objectLockMode,
            #objectLockRetainUntilDate: objectLockRetainUntilDate,
            #requestPayer: requestPayer,
            #sSECustomerAlgorithm: sSECustomerAlgorithm,
            #sSECustomerKey: sSECustomerKey,
            #sSECustomerKeyMD5: sSECustomerKeyMD5,
            #sSEKMSEncryptionContext: sSEKMSEncryptionContext,
            #sSEKMSKeyId: sSEKMSKeyId,
            #serverSideEncryption: serverSideEncryption,
            #storageClass: storageClass,
            #tagging: tagging,
            #websiteRedirectLocation: websiteRedirectLocation,
          },
        ),
        returnValue: _i4.Future<_i2.CreateMultipartUploadOutput>.value(
            _FakeCreateMultipartUploadOutput_4(
          this,
          Invocation.method(
            #createMultipartUpload,
            [],
            {
              #bucket: bucket,
              #key: key,
              #acl: acl,
              #bucketKeyEnabled: bucketKeyEnabled,
              #cacheControl: cacheControl,
              #contentDisposition: contentDisposition,
              #contentEncoding: contentEncoding,
              #contentLanguage: contentLanguage,
              #contentType: contentType,
              #expectedBucketOwner: expectedBucketOwner,
              #expires: expires,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWriteACP: grantWriteACP,
              #metadata: metadata,
              #objectLockLegalHoldStatus: objectLockLegalHoldStatus,
              #objectLockMode: objectLockMode,
              #objectLockRetainUntilDate: objectLockRetainUntilDate,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #sSEKMSEncryptionContext: sSEKMSEncryptionContext,
              #sSEKMSKeyId: sSEKMSKeyId,
              #serverSideEncryption: serverSideEncryption,
              #storageClass: storageClass,
              #tagging: tagging,
              #websiteRedirectLocation: websiteRedirectLocation,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.CreateMultipartUploadOutput>.value(
                _FakeCreateMultipartUploadOutput_4(
          this,
          Invocation.method(
            #createMultipartUpload,
            [],
            {
              #bucket: bucket,
              #key: key,
              #acl: acl,
              #bucketKeyEnabled: bucketKeyEnabled,
              #cacheControl: cacheControl,
              #contentDisposition: contentDisposition,
              #contentEncoding: contentEncoding,
              #contentLanguage: contentLanguage,
              #contentType: contentType,
              #expectedBucketOwner: expectedBucketOwner,
              #expires: expires,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWriteACP: grantWriteACP,
              #metadata: metadata,
              #objectLockLegalHoldStatus: objectLockLegalHoldStatus,
              #objectLockMode: objectLockMode,
              #objectLockRetainUntilDate: objectLockRetainUntilDate,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #sSEKMSEncryptionContext: sSEKMSEncryptionContext,
              #sSEKMSKeyId: sSEKMSKeyId,
              #serverSideEncryption: serverSideEncryption,
              #storageClass: storageClass,
              #tagging: tagging,
              #websiteRedirectLocation: websiteRedirectLocation,
            },
          ),
        )),
      ) as _i4.Future<_i2.CreateMultipartUploadOutput>);

  @override
  _i4.Future<void> deleteBucket({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucket,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketAnalyticsConfiguration({
    required String? bucket,
    required String? id,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketAnalyticsConfiguration,
          [],
          {
            #bucket: bucket,
            #id: id,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketCors({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketCors,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketEncryption({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketEncryption,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketIntelligentTieringConfiguration({
    required String? bucket,
    required String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketIntelligentTieringConfiguration,
          [],
          {
            #bucket: bucket,
            #id: id,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketInventoryConfiguration({
    required String? bucket,
    required String? id,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketInventoryConfiguration,
          [],
          {
            #bucket: bucket,
            #id: id,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketLifecycle({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketLifecycle,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketMetricsConfiguration({
    required String? bucket,
    required String? id,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketMetricsConfiguration,
          [],
          {
            #bucket: bucket,
            #id: id,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketOwnershipControls({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketOwnershipControls,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketPolicy({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketPolicy,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketReplication({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketReplication,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketTagging({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketTagging,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteBucketWebsite({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBucketWebsite,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.DeleteObjectOutput> deleteObject({
    required String? bucket,
    required String? key,
    bool? bypassGovernanceRetention,
    String? expectedBucketOwner,
    String? mfa,
    _i2.RequestPayer? requestPayer,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteObject,
          [],
          {
            #bucket: bucket,
            #key: key,
            #bypassGovernanceRetention: bypassGovernanceRetention,
            #expectedBucketOwner: expectedBucketOwner,
            #mfa: mfa,
            #requestPayer: requestPayer,
            #versionId: versionId,
          },
        ),
        returnValue:
            _i4.Future<_i2.DeleteObjectOutput>.value(_FakeDeleteObjectOutput_5(
          this,
          Invocation.method(
            #deleteObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #bypassGovernanceRetention: bypassGovernanceRetention,
              #expectedBucketOwner: expectedBucketOwner,
              #mfa: mfa,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.DeleteObjectOutput>.value(_FakeDeleteObjectOutput_5(
          this,
          Invocation.method(
            #deleteObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #bypassGovernanceRetention: bypassGovernanceRetention,
              #expectedBucketOwner: expectedBucketOwner,
              #mfa: mfa,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.DeleteObjectOutput>);

  @override
  _i4.Future<_i2.DeleteObjectTaggingOutput> deleteObjectTagging({
    required String? bucket,
    required String? key,
    String? expectedBucketOwner,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteObjectTagging,
          [],
          {
            #bucket: bucket,
            #key: key,
            #expectedBucketOwner: expectedBucketOwner,
            #versionId: versionId,
          },
        ),
        returnValue: _i4.Future<_i2.DeleteObjectTaggingOutput>.value(
            _FakeDeleteObjectTaggingOutput_6(
          this,
          Invocation.method(
            #deleteObjectTagging,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.DeleteObjectTaggingOutput>.value(
                _FakeDeleteObjectTaggingOutput_6(
          this,
          Invocation.method(
            #deleteObjectTagging,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.DeleteObjectTaggingOutput>);

  @override
  _i4.Future<_i2.DeleteObjectsOutput> deleteObjects({
    required String? bucket,
    required _i2.Delete? delete,
    bool? bypassGovernanceRetention,
    String? expectedBucketOwner,
    String? mfa,
    _i2.RequestPayer? requestPayer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteObjects,
          [],
          {
            #bucket: bucket,
            #delete: delete,
            #bypassGovernanceRetention: bypassGovernanceRetention,
            #expectedBucketOwner: expectedBucketOwner,
            #mfa: mfa,
            #requestPayer: requestPayer,
          },
        ),
        returnValue: _i4.Future<_i2.DeleteObjectsOutput>.value(
            _FakeDeleteObjectsOutput_7(
          this,
          Invocation.method(
            #deleteObjects,
            [],
            {
              #bucket: bucket,
              #delete: delete,
              #bypassGovernanceRetention: bypassGovernanceRetention,
              #expectedBucketOwner: expectedBucketOwner,
              #mfa: mfa,
              #requestPayer: requestPayer,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.DeleteObjectsOutput>.value(
            _FakeDeleteObjectsOutput_7(
          this,
          Invocation.method(
            #deleteObjects,
            [],
            {
              #bucket: bucket,
              #delete: delete,
              #bypassGovernanceRetention: bypassGovernanceRetention,
              #expectedBucketOwner: expectedBucketOwner,
              #mfa: mfa,
              #requestPayer: requestPayer,
            },
          ),
        )),
      ) as _i4.Future<_i2.DeleteObjectsOutput>);

  @override
  _i4.Future<void> deletePublicAccessBlock({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePublicAccessBlock,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.GetBucketAccelerateConfigurationOutput>
      getBucketAccelerateConfiguration({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getBucketAccelerateConfiguration,
              [],
              {
                #bucket: bucket,
                #expectedBucketOwner: expectedBucketOwner,
              },
            ),
            returnValue:
                _i4.Future<_i2.GetBucketAccelerateConfigurationOutput>.value(
                    _FakeGetBucketAccelerateConfigurationOutput_8(
              this,
              Invocation.method(
                #getBucketAccelerateConfiguration,
                [],
                {
                  #bucket: bucket,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.GetBucketAccelerateConfigurationOutput>.value(
                    _FakeGetBucketAccelerateConfigurationOutput_8(
              this,
              Invocation.method(
                #getBucketAccelerateConfiguration,
                [],
                {
                  #bucket: bucket,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
          ) as _i4.Future<_i2.GetBucketAccelerateConfigurationOutput>);

  @override
  _i4.Future<_i2.GetBucketAclOutput> getBucketAcl({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketAcl,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue:
            _i4.Future<_i2.GetBucketAclOutput>.value(_FakeGetBucketAclOutput_9(
          this,
          Invocation.method(
            #getBucketAcl,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetBucketAclOutput>.value(_FakeGetBucketAclOutput_9(
          this,
          Invocation.method(
            #getBucketAcl,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketAclOutput>);

  @override
  _i4.Future<_i2.GetBucketAnalyticsConfigurationOutput>
      getBucketAnalyticsConfiguration({
    required String? bucket,
    required String? id,
    String? expectedBucketOwner,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getBucketAnalyticsConfiguration,
              [],
              {
                #bucket: bucket,
                #id: id,
                #expectedBucketOwner: expectedBucketOwner,
              },
            ),
            returnValue:
                _i4.Future<_i2.GetBucketAnalyticsConfigurationOutput>.value(
                    _FakeGetBucketAnalyticsConfigurationOutput_10(
              this,
              Invocation.method(
                #getBucketAnalyticsConfiguration,
                [],
                {
                  #bucket: bucket,
                  #id: id,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.GetBucketAnalyticsConfigurationOutput>.value(
                    _FakeGetBucketAnalyticsConfigurationOutput_10(
              this,
              Invocation.method(
                #getBucketAnalyticsConfiguration,
                [],
                {
                  #bucket: bucket,
                  #id: id,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
          ) as _i4.Future<_i2.GetBucketAnalyticsConfigurationOutput>);

  @override
  _i4.Future<_i2.GetBucketCorsOutput> getBucketCors({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketCors,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketCorsOutput>.value(
            _FakeGetBucketCorsOutput_11(
          this,
          Invocation.method(
            #getBucketCors,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.GetBucketCorsOutput>.value(
            _FakeGetBucketCorsOutput_11(
          this,
          Invocation.method(
            #getBucketCors,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketCorsOutput>);

  @override
  _i4.Future<_i2.GetBucketEncryptionOutput> getBucketEncryption({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketEncryption,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketEncryptionOutput>.value(
            _FakeGetBucketEncryptionOutput_12(
          this,
          Invocation.method(
            #getBucketEncryption,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetBucketEncryptionOutput>.value(
                _FakeGetBucketEncryptionOutput_12(
          this,
          Invocation.method(
            #getBucketEncryption,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketEncryptionOutput>);

  @override
  _i4.Future<_i2.GetBucketIntelligentTieringConfigurationOutput>
      getBucketIntelligentTieringConfiguration({
    required String? bucket,
    required String? id,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getBucketIntelligentTieringConfiguration,
              [],
              {
                #bucket: bucket,
                #id: id,
              },
            ),
            returnValue: _i4.Future<
                    _i2.GetBucketIntelligentTieringConfigurationOutput>.value(
                _FakeGetBucketIntelligentTieringConfigurationOutput_13(
              this,
              Invocation.method(
                #getBucketIntelligentTieringConfiguration,
                [],
                {
                  #bucket: bucket,
                  #id: id,
                },
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2.GetBucketIntelligentTieringConfigurationOutput>.value(
                _FakeGetBucketIntelligentTieringConfigurationOutput_13(
              this,
              Invocation.method(
                #getBucketIntelligentTieringConfiguration,
                [],
                {
                  #bucket: bucket,
                  #id: id,
                },
              ),
            )),
          ) as _i4.Future<_i2.GetBucketIntelligentTieringConfigurationOutput>);

  @override
  _i4.Future<_i2.GetBucketInventoryConfigurationOutput>
      getBucketInventoryConfiguration({
    required String? bucket,
    required String? id,
    String? expectedBucketOwner,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getBucketInventoryConfiguration,
              [],
              {
                #bucket: bucket,
                #id: id,
                #expectedBucketOwner: expectedBucketOwner,
              },
            ),
            returnValue:
                _i4.Future<_i2.GetBucketInventoryConfigurationOutput>.value(
                    _FakeGetBucketInventoryConfigurationOutput_14(
              this,
              Invocation.method(
                #getBucketInventoryConfiguration,
                [],
                {
                  #bucket: bucket,
                  #id: id,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.GetBucketInventoryConfigurationOutput>.value(
                    _FakeGetBucketInventoryConfigurationOutput_14(
              this,
              Invocation.method(
                #getBucketInventoryConfiguration,
                [],
                {
                  #bucket: bucket,
                  #id: id,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
          ) as _i4.Future<_i2.GetBucketInventoryConfigurationOutput>);

  @override
  _i4.Future<_i2.GetBucketLifecycleOutput> getBucketLifecycle({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketLifecycle,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketLifecycleOutput>.value(
            _FakeGetBucketLifecycleOutput_15(
          this,
          Invocation.method(
            #getBucketLifecycle,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetBucketLifecycleOutput>.value(
                _FakeGetBucketLifecycleOutput_15(
          this,
          Invocation.method(
            #getBucketLifecycle,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketLifecycleOutput>);

  @override
  _i4.Future<_i2.GetBucketLifecycleConfigurationOutput>
      getBucketLifecycleConfiguration({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getBucketLifecycleConfiguration,
              [],
              {
                #bucket: bucket,
                #expectedBucketOwner: expectedBucketOwner,
              },
            ),
            returnValue:
                _i4.Future<_i2.GetBucketLifecycleConfigurationOutput>.value(
                    _FakeGetBucketLifecycleConfigurationOutput_16(
              this,
              Invocation.method(
                #getBucketLifecycleConfiguration,
                [],
                {
                  #bucket: bucket,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.GetBucketLifecycleConfigurationOutput>.value(
                    _FakeGetBucketLifecycleConfigurationOutput_16(
              this,
              Invocation.method(
                #getBucketLifecycleConfiguration,
                [],
                {
                  #bucket: bucket,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
          ) as _i4.Future<_i2.GetBucketLifecycleConfigurationOutput>);

  @override
  _i4.Future<_i2.GetBucketLocationOutput> getBucketLocation({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketLocation,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketLocationOutput>.value(
            _FakeGetBucketLocationOutput_17(
          this,
          Invocation.method(
            #getBucketLocation,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetBucketLocationOutput>.value(
                _FakeGetBucketLocationOutput_17(
          this,
          Invocation.method(
            #getBucketLocation,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketLocationOutput>);

  @override
  _i4.Future<_i2.GetBucketLoggingOutput> getBucketLogging({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketLogging,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketLoggingOutput>.value(
            _FakeGetBucketLoggingOutput_18(
          this,
          Invocation.method(
            #getBucketLogging,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.GetBucketLoggingOutput>.value(
            _FakeGetBucketLoggingOutput_18(
          this,
          Invocation.method(
            #getBucketLogging,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketLoggingOutput>);

  @override
  _i4.Future<_i2.GetBucketMetricsConfigurationOutput>
      getBucketMetricsConfiguration({
    required String? bucket,
    required String? id,
    String? expectedBucketOwner,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getBucketMetricsConfiguration,
              [],
              {
                #bucket: bucket,
                #id: id,
                #expectedBucketOwner: expectedBucketOwner,
              },
            ),
            returnValue:
                _i4.Future<_i2.GetBucketMetricsConfigurationOutput>.value(
                    _FakeGetBucketMetricsConfigurationOutput_19(
              this,
              Invocation.method(
                #getBucketMetricsConfiguration,
                [],
                {
                  #bucket: bucket,
                  #id: id,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.GetBucketMetricsConfigurationOutput>.value(
                    _FakeGetBucketMetricsConfigurationOutput_19(
              this,
              Invocation.method(
                #getBucketMetricsConfiguration,
                [],
                {
                  #bucket: bucket,
                  #id: id,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
          ) as _i4.Future<_i2.GetBucketMetricsConfigurationOutput>);

  @override
  _i4.Future<_i2.NotificationConfigurationDeprecated> getBucketNotification({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketNotification,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.NotificationConfigurationDeprecated>.value(
            _FakeNotificationConfigurationDeprecated_20(
          this,
          Invocation.method(
            #getBucketNotification,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.NotificationConfigurationDeprecated>.value(
                _FakeNotificationConfigurationDeprecated_20(
          this,
          Invocation.method(
            #getBucketNotification,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.NotificationConfigurationDeprecated>);

  @override
  _i4.Future<_i2.NotificationConfiguration> getBucketNotificationConfiguration({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketNotificationConfiguration,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.NotificationConfiguration>.value(
            _FakeNotificationConfiguration_21(
          this,
          Invocation.method(
            #getBucketNotificationConfiguration,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.NotificationConfiguration>.value(
                _FakeNotificationConfiguration_21(
          this,
          Invocation.method(
            #getBucketNotificationConfiguration,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.NotificationConfiguration>);

  @override
  _i4.Future<_i2.GetBucketOwnershipControlsOutput> getBucketOwnershipControls({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketOwnershipControls,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketOwnershipControlsOutput>.value(
            _FakeGetBucketOwnershipControlsOutput_22(
          this,
          Invocation.method(
            #getBucketOwnershipControls,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetBucketOwnershipControlsOutput>.value(
                _FakeGetBucketOwnershipControlsOutput_22(
          this,
          Invocation.method(
            #getBucketOwnershipControls,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketOwnershipControlsOutput>);

  @override
  _i4.Future<_i2.GetBucketPolicyOutput> getBucketPolicy({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketPolicy,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketPolicyOutput>.value(
            _FakeGetBucketPolicyOutput_23(
          this,
          Invocation.method(
            #getBucketPolicy,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.GetBucketPolicyOutput>.value(
            _FakeGetBucketPolicyOutput_23(
          this,
          Invocation.method(
            #getBucketPolicy,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketPolicyOutput>);

  @override
  _i4.Future<_i2.GetBucketPolicyStatusOutput> getBucketPolicyStatus({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketPolicyStatus,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketPolicyStatusOutput>.value(
            _FakeGetBucketPolicyStatusOutput_24(
          this,
          Invocation.method(
            #getBucketPolicyStatus,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetBucketPolicyStatusOutput>.value(
                _FakeGetBucketPolicyStatusOutput_24(
          this,
          Invocation.method(
            #getBucketPolicyStatus,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketPolicyStatusOutput>);

  @override
  _i4.Future<_i2.GetBucketReplicationOutput> getBucketReplication({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketReplication,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketReplicationOutput>.value(
            _FakeGetBucketReplicationOutput_25(
          this,
          Invocation.method(
            #getBucketReplication,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetBucketReplicationOutput>.value(
                _FakeGetBucketReplicationOutput_25(
          this,
          Invocation.method(
            #getBucketReplication,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketReplicationOutput>);

  @override
  _i4.Future<_i2.GetBucketRequestPaymentOutput> getBucketRequestPayment({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketRequestPayment,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketRequestPaymentOutput>.value(
            _FakeGetBucketRequestPaymentOutput_26(
          this,
          Invocation.method(
            #getBucketRequestPayment,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetBucketRequestPaymentOutput>.value(
                _FakeGetBucketRequestPaymentOutput_26(
          this,
          Invocation.method(
            #getBucketRequestPayment,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketRequestPaymentOutput>);

  @override
  _i4.Future<_i2.GetBucketTaggingOutput> getBucketTagging({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketTagging,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketTaggingOutput>.value(
            _FakeGetBucketTaggingOutput_27(
          this,
          Invocation.method(
            #getBucketTagging,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.GetBucketTaggingOutput>.value(
            _FakeGetBucketTaggingOutput_27(
          this,
          Invocation.method(
            #getBucketTagging,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketTaggingOutput>);

  @override
  _i4.Future<_i2.GetBucketVersioningOutput> getBucketVersioning({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketVersioning,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketVersioningOutput>.value(
            _FakeGetBucketVersioningOutput_28(
          this,
          Invocation.method(
            #getBucketVersioning,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetBucketVersioningOutput>.value(
                _FakeGetBucketVersioningOutput_28(
          this,
          Invocation.method(
            #getBucketVersioning,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketVersioningOutput>);

  @override
  _i4.Future<_i2.GetBucketWebsiteOutput> getBucketWebsite({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBucketWebsite,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetBucketWebsiteOutput>.value(
            _FakeGetBucketWebsiteOutput_29(
          this,
          Invocation.method(
            #getBucketWebsite,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.GetBucketWebsiteOutput>.value(
            _FakeGetBucketWebsiteOutput_29(
          this,
          Invocation.method(
            #getBucketWebsite,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetBucketWebsiteOutput>);

  @override
  _i4.Future<_i2.GetObjectOutput> getObject({
    required String? bucket,
    required String? key,
    String? expectedBucketOwner,
    String? ifMatch,
    DateTime? ifModifiedSince,
    String? ifNoneMatch,
    DateTime? ifUnmodifiedSince,
    int? partNumber,
    String? range,
    _i2.RequestPayer? requestPayer,
    String? responseCacheControl,
    String? responseContentDisposition,
    String? responseContentEncoding,
    String? responseContentLanguage,
    String? responseContentType,
    DateTime? responseExpires,
    String? sSECustomerAlgorithm,
    _i5.Uint8List? sSECustomerKey,
    String? sSECustomerKeyMD5,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getObject,
          [],
          {
            #bucket: bucket,
            #key: key,
            #expectedBucketOwner: expectedBucketOwner,
            #ifMatch: ifMatch,
            #ifModifiedSince: ifModifiedSince,
            #ifNoneMatch: ifNoneMatch,
            #ifUnmodifiedSince: ifUnmodifiedSince,
            #partNumber: partNumber,
            #range: range,
            #requestPayer: requestPayer,
            #responseCacheControl: responseCacheControl,
            #responseContentDisposition: responseContentDisposition,
            #responseContentEncoding: responseContentEncoding,
            #responseContentLanguage: responseContentLanguage,
            #responseContentType: responseContentType,
            #responseExpires: responseExpires,
            #sSECustomerAlgorithm: sSECustomerAlgorithm,
            #sSECustomerKey: sSECustomerKey,
            #sSECustomerKeyMD5: sSECustomerKeyMD5,
            #versionId: versionId,
          },
        ),
        returnValue:
            _i4.Future<_i2.GetObjectOutput>.value(_FakeGetObjectOutput_30(
          this,
          Invocation.method(
            #getObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #ifMatch: ifMatch,
              #ifModifiedSince: ifModifiedSince,
              #ifNoneMatch: ifNoneMatch,
              #ifUnmodifiedSince: ifUnmodifiedSince,
              #partNumber: partNumber,
              #range: range,
              #requestPayer: requestPayer,
              #responseCacheControl: responseCacheControl,
              #responseContentDisposition: responseContentDisposition,
              #responseContentEncoding: responseContentEncoding,
              #responseContentLanguage: responseContentLanguage,
              #responseContentType: responseContentType,
              #responseExpires: responseExpires,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetObjectOutput>.value(_FakeGetObjectOutput_30(
          this,
          Invocation.method(
            #getObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #ifMatch: ifMatch,
              #ifModifiedSince: ifModifiedSince,
              #ifNoneMatch: ifNoneMatch,
              #ifUnmodifiedSince: ifUnmodifiedSince,
              #partNumber: partNumber,
              #range: range,
              #requestPayer: requestPayer,
              #responseCacheControl: responseCacheControl,
              #responseContentDisposition: responseContentDisposition,
              #responseContentEncoding: responseContentEncoding,
              #responseContentLanguage: responseContentLanguage,
              #responseContentType: responseContentType,
              #responseExpires: responseExpires,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetObjectOutput>);

  @override
  _i4.Future<_i2.GetObjectAclOutput> getObjectAcl({
    required String? bucket,
    required String? key,
    String? expectedBucketOwner,
    _i2.RequestPayer? requestPayer,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getObjectAcl,
          [],
          {
            #bucket: bucket,
            #key: key,
            #expectedBucketOwner: expectedBucketOwner,
            #requestPayer: requestPayer,
            #versionId: versionId,
          },
        ),
        returnValue:
            _i4.Future<_i2.GetObjectAclOutput>.value(_FakeGetObjectAclOutput_31(
          this,
          Invocation.method(
            #getObjectAcl,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetObjectAclOutput>.value(_FakeGetObjectAclOutput_31(
          this,
          Invocation.method(
            #getObjectAcl,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetObjectAclOutput>);

  @override
  _i4.Future<_i2.GetObjectLegalHoldOutput> getObjectLegalHold({
    required String? bucket,
    required String? key,
    String? expectedBucketOwner,
    _i2.RequestPayer? requestPayer,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getObjectLegalHold,
          [],
          {
            #bucket: bucket,
            #key: key,
            #expectedBucketOwner: expectedBucketOwner,
            #requestPayer: requestPayer,
            #versionId: versionId,
          },
        ),
        returnValue: _i4.Future<_i2.GetObjectLegalHoldOutput>.value(
            _FakeGetObjectLegalHoldOutput_32(
          this,
          Invocation.method(
            #getObjectLegalHold,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetObjectLegalHoldOutput>.value(
                _FakeGetObjectLegalHoldOutput_32(
          this,
          Invocation.method(
            #getObjectLegalHold,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetObjectLegalHoldOutput>);

  @override
  _i4.Future<_i2.GetObjectLockConfigurationOutput> getObjectLockConfiguration({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getObjectLockConfiguration,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetObjectLockConfigurationOutput>.value(
            _FakeGetObjectLockConfigurationOutput_33(
          this,
          Invocation.method(
            #getObjectLockConfiguration,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetObjectLockConfigurationOutput>.value(
                _FakeGetObjectLockConfigurationOutput_33(
          this,
          Invocation.method(
            #getObjectLockConfiguration,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetObjectLockConfigurationOutput>);

  @override
  _i4.Future<_i2.GetObjectRetentionOutput> getObjectRetention({
    required String? bucket,
    required String? key,
    String? expectedBucketOwner,
    _i2.RequestPayer? requestPayer,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getObjectRetention,
          [],
          {
            #bucket: bucket,
            #key: key,
            #expectedBucketOwner: expectedBucketOwner,
            #requestPayer: requestPayer,
            #versionId: versionId,
          },
        ),
        returnValue: _i4.Future<_i2.GetObjectRetentionOutput>.value(
            _FakeGetObjectRetentionOutput_34(
          this,
          Invocation.method(
            #getObjectRetention,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetObjectRetentionOutput>.value(
                _FakeGetObjectRetentionOutput_34(
          this,
          Invocation.method(
            #getObjectRetention,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetObjectRetentionOutput>);

  @override
  _i4.Future<_i2.GetObjectTaggingOutput> getObjectTagging({
    required String? bucket,
    required String? key,
    String? expectedBucketOwner,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getObjectTagging,
          [],
          {
            #bucket: bucket,
            #key: key,
            #expectedBucketOwner: expectedBucketOwner,
            #versionId: versionId,
          },
        ),
        returnValue: _i4.Future<_i2.GetObjectTaggingOutput>.value(
            _FakeGetObjectTaggingOutput_35(
          this,
          Invocation.method(
            #getObjectTagging,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.GetObjectTaggingOutput>.value(
            _FakeGetObjectTaggingOutput_35(
          this,
          Invocation.method(
            #getObjectTagging,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetObjectTaggingOutput>);

  @override
  _i4.Future<_i2.GetObjectTorrentOutput> getObjectTorrent({
    required String? bucket,
    required String? key,
    String? expectedBucketOwner,
    _i2.RequestPayer? requestPayer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getObjectTorrent,
          [],
          {
            #bucket: bucket,
            #key: key,
            #expectedBucketOwner: expectedBucketOwner,
            #requestPayer: requestPayer,
          },
        ),
        returnValue: _i4.Future<_i2.GetObjectTorrentOutput>.value(
            _FakeGetObjectTorrentOutput_36(
          this,
          Invocation.method(
            #getObjectTorrent,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.GetObjectTorrentOutput>.value(
            _FakeGetObjectTorrentOutput_36(
          this,
          Invocation.method(
            #getObjectTorrent,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetObjectTorrentOutput>);

  @override
  _i4.Future<_i2.GetPublicAccessBlockOutput> getPublicAccessBlock({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPublicAccessBlock,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<_i2.GetPublicAccessBlockOutput>.value(
            _FakeGetPublicAccessBlockOutput_37(
          this,
          Invocation.method(
            #getPublicAccessBlock,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.GetPublicAccessBlockOutput>.value(
                _FakeGetPublicAccessBlockOutput_37(
          this,
          Invocation.method(
            #getPublicAccessBlock,
            [],
            {
              #bucket: bucket,
              #expectedBucketOwner: expectedBucketOwner,
            },
          ),
        )),
      ) as _i4.Future<_i2.GetPublicAccessBlockOutput>);

  @override
  _i4.Future<void> headBucket({
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headBucket,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.HeadObjectOutput> headObject({
    required String? bucket,
    required String? key,
    String? expectedBucketOwner,
    String? ifMatch,
    DateTime? ifModifiedSince,
    String? ifNoneMatch,
    DateTime? ifUnmodifiedSince,
    int? partNumber,
    String? range,
    _i2.RequestPayer? requestPayer,
    String? sSECustomerAlgorithm,
    _i5.Uint8List? sSECustomerKey,
    String? sSECustomerKeyMD5,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headObject,
          [],
          {
            #bucket: bucket,
            #key: key,
            #expectedBucketOwner: expectedBucketOwner,
            #ifMatch: ifMatch,
            #ifModifiedSince: ifModifiedSince,
            #ifNoneMatch: ifNoneMatch,
            #ifUnmodifiedSince: ifUnmodifiedSince,
            #partNumber: partNumber,
            #range: range,
            #requestPayer: requestPayer,
            #sSECustomerAlgorithm: sSECustomerAlgorithm,
            #sSECustomerKey: sSECustomerKey,
            #sSECustomerKeyMD5: sSECustomerKeyMD5,
            #versionId: versionId,
          },
        ),
        returnValue:
            _i4.Future<_i2.HeadObjectOutput>.value(_FakeHeadObjectOutput_38(
          this,
          Invocation.method(
            #headObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #ifMatch: ifMatch,
              #ifModifiedSince: ifModifiedSince,
              #ifNoneMatch: ifNoneMatch,
              #ifUnmodifiedSince: ifUnmodifiedSince,
              #partNumber: partNumber,
              #range: range,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.HeadObjectOutput>.value(_FakeHeadObjectOutput_38(
          this,
          Invocation.method(
            #headObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #ifMatch: ifMatch,
              #ifModifiedSince: ifModifiedSince,
              #ifNoneMatch: ifNoneMatch,
              #ifUnmodifiedSince: ifUnmodifiedSince,
              #partNumber: partNumber,
              #range: range,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.HeadObjectOutput>);

  @override
  _i4.Future<_i2.ListBucketAnalyticsConfigurationsOutput>
      listBucketAnalyticsConfigurations({
    required String? bucket,
    String? continuationToken,
    String? expectedBucketOwner,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #listBucketAnalyticsConfigurations,
              [],
              {
                #bucket: bucket,
                #continuationToken: continuationToken,
                #expectedBucketOwner: expectedBucketOwner,
              },
            ),
            returnValue:
                _i4.Future<_i2.ListBucketAnalyticsConfigurationsOutput>.value(
                    _FakeListBucketAnalyticsConfigurationsOutput_39(
              this,
              Invocation.method(
                #listBucketAnalyticsConfigurations,
                [],
                {
                  #bucket: bucket,
                  #continuationToken: continuationToken,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.ListBucketAnalyticsConfigurationsOutput>.value(
                    _FakeListBucketAnalyticsConfigurationsOutput_39(
              this,
              Invocation.method(
                #listBucketAnalyticsConfigurations,
                [],
                {
                  #bucket: bucket,
                  #continuationToken: continuationToken,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
          ) as _i4.Future<_i2.ListBucketAnalyticsConfigurationsOutput>);

  @override
  _i4.Future<_i2.ListBucketIntelligentTieringConfigurationsOutput>
      listBucketIntelligentTieringConfigurations({
    required String? bucket,
    String? continuationToken,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #listBucketIntelligentTieringConfigurations,
              [],
              {
                #bucket: bucket,
                #continuationToken: continuationToken,
              },
            ),
            returnValue: _i4.Future<
                    _i2.ListBucketIntelligentTieringConfigurationsOutput>.value(
                _FakeListBucketIntelligentTieringConfigurationsOutput_40(
              this,
              Invocation.method(
                #listBucketIntelligentTieringConfigurations,
                [],
                {
                  #bucket: bucket,
                  #continuationToken: continuationToken,
                },
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2.ListBucketIntelligentTieringConfigurationsOutput>.value(
                _FakeListBucketIntelligentTieringConfigurationsOutput_40(
              this,
              Invocation.method(
                #listBucketIntelligentTieringConfigurations,
                [],
                {
                  #bucket: bucket,
                  #continuationToken: continuationToken,
                },
              ),
            )),
          ) as _i4
              .Future<_i2.ListBucketIntelligentTieringConfigurationsOutput>);

  @override
  _i4.Future<_i2.ListBucketInventoryConfigurationsOutput>
      listBucketInventoryConfigurations({
    required String? bucket,
    String? continuationToken,
    String? expectedBucketOwner,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #listBucketInventoryConfigurations,
              [],
              {
                #bucket: bucket,
                #continuationToken: continuationToken,
                #expectedBucketOwner: expectedBucketOwner,
              },
            ),
            returnValue:
                _i4.Future<_i2.ListBucketInventoryConfigurationsOutput>.value(
                    _FakeListBucketInventoryConfigurationsOutput_41(
              this,
              Invocation.method(
                #listBucketInventoryConfigurations,
                [],
                {
                  #bucket: bucket,
                  #continuationToken: continuationToken,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.ListBucketInventoryConfigurationsOutput>.value(
                    _FakeListBucketInventoryConfigurationsOutput_41(
              this,
              Invocation.method(
                #listBucketInventoryConfigurations,
                [],
                {
                  #bucket: bucket,
                  #continuationToken: continuationToken,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
          ) as _i4.Future<_i2.ListBucketInventoryConfigurationsOutput>);

  @override
  _i4.Future<_i2.ListBucketMetricsConfigurationsOutput>
      listBucketMetricsConfigurations({
    required String? bucket,
    String? continuationToken,
    String? expectedBucketOwner,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #listBucketMetricsConfigurations,
              [],
              {
                #bucket: bucket,
                #continuationToken: continuationToken,
                #expectedBucketOwner: expectedBucketOwner,
              },
            ),
            returnValue:
                _i4.Future<_i2.ListBucketMetricsConfigurationsOutput>.value(
                    _FakeListBucketMetricsConfigurationsOutput_42(
              this,
              Invocation.method(
                #listBucketMetricsConfigurations,
                [],
                {
                  #bucket: bucket,
                  #continuationToken: continuationToken,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.ListBucketMetricsConfigurationsOutput>.value(
                    _FakeListBucketMetricsConfigurationsOutput_42(
              this,
              Invocation.method(
                #listBucketMetricsConfigurations,
                [],
                {
                  #bucket: bucket,
                  #continuationToken: continuationToken,
                  #expectedBucketOwner: expectedBucketOwner,
                },
              ),
            )),
          ) as _i4.Future<_i2.ListBucketMetricsConfigurationsOutput>);

  @override
  _i4.Future<_i2.ListBucketsOutput> listBuckets() => (super.noSuchMethod(
        Invocation.method(
          #listBuckets,
          [],
        ),
        returnValue:
            _i4.Future<_i2.ListBucketsOutput>.value(_FakeListBucketsOutput_43(
          this,
          Invocation.method(
            #listBuckets,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.ListBucketsOutput>.value(_FakeListBucketsOutput_43(
          this,
          Invocation.method(
            #listBuckets,
            [],
          ),
        )),
      ) as _i4.Future<_i2.ListBucketsOutput>);

  @override
  _i4.Future<_i2.ListMultipartUploadsOutput> listMultipartUploads({
    required String? bucket,
    String? delimiter,
    _i2.EncodingType? encodingType,
    String? expectedBucketOwner,
    String? keyMarker,
    int? maxUploads,
    String? prefix,
    String? uploadIdMarker,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listMultipartUploads,
          [],
          {
            #bucket: bucket,
            #delimiter: delimiter,
            #encodingType: encodingType,
            #expectedBucketOwner: expectedBucketOwner,
            #keyMarker: keyMarker,
            #maxUploads: maxUploads,
            #prefix: prefix,
            #uploadIdMarker: uploadIdMarker,
          },
        ),
        returnValue: _i4.Future<_i2.ListMultipartUploadsOutput>.value(
            _FakeListMultipartUploadsOutput_44(
          this,
          Invocation.method(
            #listMultipartUploads,
            [],
            {
              #bucket: bucket,
              #delimiter: delimiter,
              #encodingType: encodingType,
              #expectedBucketOwner: expectedBucketOwner,
              #keyMarker: keyMarker,
              #maxUploads: maxUploads,
              #prefix: prefix,
              #uploadIdMarker: uploadIdMarker,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.ListMultipartUploadsOutput>.value(
                _FakeListMultipartUploadsOutput_44(
          this,
          Invocation.method(
            #listMultipartUploads,
            [],
            {
              #bucket: bucket,
              #delimiter: delimiter,
              #encodingType: encodingType,
              #expectedBucketOwner: expectedBucketOwner,
              #keyMarker: keyMarker,
              #maxUploads: maxUploads,
              #prefix: prefix,
              #uploadIdMarker: uploadIdMarker,
            },
          ),
        )),
      ) as _i4.Future<_i2.ListMultipartUploadsOutput>);

  @override
  _i4.Future<_i2.ListObjectVersionsOutput> listObjectVersions({
    required String? bucket,
    String? delimiter,
    _i2.EncodingType? encodingType,
    String? expectedBucketOwner,
    String? keyMarker,
    int? maxKeys,
    String? prefix,
    String? versionIdMarker,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listObjectVersions,
          [],
          {
            #bucket: bucket,
            #delimiter: delimiter,
            #encodingType: encodingType,
            #expectedBucketOwner: expectedBucketOwner,
            #keyMarker: keyMarker,
            #maxKeys: maxKeys,
            #prefix: prefix,
            #versionIdMarker: versionIdMarker,
          },
        ),
        returnValue: _i4.Future<_i2.ListObjectVersionsOutput>.value(
            _FakeListObjectVersionsOutput_45(
          this,
          Invocation.method(
            #listObjectVersions,
            [],
            {
              #bucket: bucket,
              #delimiter: delimiter,
              #encodingType: encodingType,
              #expectedBucketOwner: expectedBucketOwner,
              #keyMarker: keyMarker,
              #maxKeys: maxKeys,
              #prefix: prefix,
              #versionIdMarker: versionIdMarker,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.ListObjectVersionsOutput>.value(
                _FakeListObjectVersionsOutput_45(
          this,
          Invocation.method(
            #listObjectVersions,
            [],
            {
              #bucket: bucket,
              #delimiter: delimiter,
              #encodingType: encodingType,
              #expectedBucketOwner: expectedBucketOwner,
              #keyMarker: keyMarker,
              #maxKeys: maxKeys,
              #prefix: prefix,
              #versionIdMarker: versionIdMarker,
            },
          ),
        )),
      ) as _i4.Future<_i2.ListObjectVersionsOutput>);

  @override
  _i4.Future<_i2.ListObjectsOutput> listObjects({
    required String? bucket,
    String? delimiter,
    _i2.EncodingType? encodingType,
    String? expectedBucketOwner,
    String? marker,
    int? maxKeys,
    String? prefix,
    _i2.RequestPayer? requestPayer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listObjects,
          [],
          {
            #bucket: bucket,
            #delimiter: delimiter,
            #encodingType: encodingType,
            #expectedBucketOwner: expectedBucketOwner,
            #marker: marker,
            #maxKeys: maxKeys,
            #prefix: prefix,
            #requestPayer: requestPayer,
          },
        ),
        returnValue:
            _i4.Future<_i2.ListObjectsOutput>.value(_FakeListObjectsOutput_46(
          this,
          Invocation.method(
            #listObjects,
            [],
            {
              #bucket: bucket,
              #delimiter: delimiter,
              #encodingType: encodingType,
              #expectedBucketOwner: expectedBucketOwner,
              #marker: marker,
              #maxKeys: maxKeys,
              #prefix: prefix,
              #requestPayer: requestPayer,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.ListObjectsOutput>.value(_FakeListObjectsOutput_46(
          this,
          Invocation.method(
            #listObjects,
            [],
            {
              #bucket: bucket,
              #delimiter: delimiter,
              #encodingType: encodingType,
              #expectedBucketOwner: expectedBucketOwner,
              #marker: marker,
              #maxKeys: maxKeys,
              #prefix: prefix,
              #requestPayer: requestPayer,
            },
          ),
        )),
      ) as _i4.Future<_i2.ListObjectsOutput>);

  @override
  _i4.Future<_i2.ListObjectsV2Output> listObjectsV2({
    required String? bucket,
    String? continuationToken,
    String? delimiter,
    _i2.EncodingType? encodingType,
    String? expectedBucketOwner,
    bool? fetchOwner,
    int? maxKeys,
    String? prefix,
    _i2.RequestPayer? requestPayer,
    String? startAfter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listObjectsV2,
          [],
          {
            #bucket: bucket,
            #continuationToken: continuationToken,
            #delimiter: delimiter,
            #encodingType: encodingType,
            #expectedBucketOwner: expectedBucketOwner,
            #fetchOwner: fetchOwner,
            #maxKeys: maxKeys,
            #prefix: prefix,
            #requestPayer: requestPayer,
            #startAfter: startAfter,
          },
        ),
        returnValue: _i4.Future<_i2.ListObjectsV2Output>.value(
            _FakeListObjectsV2Output_47(
          this,
          Invocation.method(
            #listObjectsV2,
            [],
            {
              #bucket: bucket,
              #continuationToken: continuationToken,
              #delimiter: delimiter,
              #encodingType: encodingType,
              #expectedBucketOwner: expectedBucketOwner,
              #fetchOwner: fetchOwner,
              #maxKeys: maxKeys,
              #prefix: prefix,
              #requestPayer: requestPayer,
              #startAfter: startAfter,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.ListObjectsV2Output>.value(
            _FakeListObjectsV2Output_47(
          this,
          Invocation.method(
            #listObjectsV2,
            [],
            {
              #bucket: bucket,
              #continuationToken: continuationToken,
              #delimiter: delimiter,
              #encodingType: encodingType,
              #expectedBucketOwner: expectedBucketOwner,
              #fetchOwner: fetchOwner,
              #maxKeys: maxKeys,
              #prefix: prefix,
              #requestPayer: requestPayer,
              #startAfter: startAfter,
            },
          ),
        )),
      ) as _i4.Future<_i2.ListObjectsV2Output>);

  @override
  _i4.Future<_i2.ListPartsOutput> listParts({
    required String? bucket,
    required String? key,
    required String? uploadId,
    String? expectedBucketOwner,
    int? maxParts,
    int? partNumberMarker,
    _i2.RequestPayer? requestPayer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listParts,
          [],
          {
            #bucket: bucket,
            #key: key,
            #uploadId: uploadId,
            #expectedBucketOwner: expectedBucketOwner,
            #maxParts: maxParts,
            #partNumberMarker: partNumberMarker,
            #requestPayer: requestPayer,
          },
        ),
        returnValue:
            _i4.Future<_i2.ListPartsOutput>.value(_FakeListPartsOutput_48(
          this,
          Invocation.method(
            #listParts,
            [],
            {
              #bucket: bucket,
              #key: key,
              #uploadId: uploadId,
              #expectedBucketOwner: expectedBucketOwner,
              #maxParts: maxParts,
              #partNumberMarker: partNumberMarker,
              #requestPayer: requestPayer,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.ListPartsOutput>.value(_FakeListPartsOutput_48(
          this,
          Invocation.method(
            #listParts,
            [],
            {
              #bucket: bucket,
              #key: key,
              #uploadId: uploadId,
              #expectedBucketOwner: expectedBucketOwner,
              #maxParts: maxParts,
              #partNumberMarker: partNumberMarker,
              #requestPayer: requestPayer,
            },
          ),
        )),
      ) as _i4.Future<_i2.ListPartsOutput>);

  @override
  _i4.Future<void> putBucketAccelerateConfiguration({
    required _i2.AccelerateConfiguration? accelerateConfiguration,
    required String? bucket,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketAccelerateConfiguration,
          [],
          {
            #accelerateConfiguration: accelerateConfiguration,
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketAcl({
    required String? bucket,
    _i2.BucketCannedACL? acl,
    _i2.AccessControlPolicy? accessControlPolicy,
    String? contentMD5,
    String? expectedBucketOwner,
    String? grantFullControl,
    String? grantRead,
    String? grantReadACP,
    String? grantWrite,
    String? grantWriteACP,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketAcl,
          [],
          {
            #bucket: bucket,
            #acl: acl,
            #accessControlPolicy: accessControlPolicy,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #grantFullControl: grantFullControl,
            #grantRead: grantRead,
            #grantReadACP: grantReadACP,
            #grantWrite: grantWrite,
            #grantWriteACP: grantWriteACP,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketAnalyticsConfiguration({
    required _i2.AnalyticsConfiguration? analyticsConfiguration,
    required String? bucket,
    required String? id,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketAnalyticsConfiguration,
          [],
          {
            #analyticsConfiguration: analyticsConfiguration,
            #bucket: bucket,
            #id: id,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketCors({
    required String? bucket,
    required _i2.CORSConfiguration? cORSConfiguration,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketCors,
          [],
          {
            #bucket: bucket,
            #cORSConfiguration: cORSConfiguration,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketEncryption({
    required String? bucket,
    required _i2.ServerSideEncryptionConfiguration?
        serverSideEncryptionConfiguration,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketEncryption,
          [],
          {
            #bucket: bucket,
            #serverSideEncryptionConfiguration:
                serverSideEncryptionConfiguration,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketIntelligentTieringConfiguration({
    required String? bucket,
    required String? id,
    required _i2.IntelligentTieringConfiguration?
        intelligentTieringConfiguration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketIntelligentTieringConfiguration,
          [],
          {
            #bucket: bucket,
            #id: id,
            #intelligentTieringConfiguration: intelligentTieringConfiguration,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketInventoryConfiguration({
    required String? bucket,
    required String? id,
    required _i2.InventoryConfiguration? inventoryConfiguration,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketInventoryConfiguration,
          [],
          {
            #bucket: bucket,
            #id: id,
            #inventoryConfiguration: inventoryConfiguration,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketLifecycle({
    required String? bucket,
    String? contentMD5,
    String? expectedBucketOwner,
    _i2.LifecycleConfiguration? lifecycleConfiguration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketLifecycle,
          [],
          {
            #bucket: bucket,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #lifecycleConfiguration: lifecycleConfiguration,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketLifecycleConfiguration({
    required String? bucket,
    String? expectedBucketOwner,
    _i2.BucketLifecycleConfiguration? lifecycleConfiguration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketLifecycleConfiguration,
          [],
          {
            #bucket: bucket,
            #expectedBucketOwner: expectedBucketOwner,
            #lifecycleConfiguration: lifecycleConfiguration,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketLogging({
    required String? bucket,
    required _i2.BucketLoggingStatus? bucketLoggingStatus,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketLogging,
          [],
          {
            #bucket: bucket,
            #bucketLoggingStatus: bucketLoggingStatus,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketMetricsConfiguration({
    required String? bucket,
    required String? id,
    required _i2.MetricsConfiguration? metricsConfiguration,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketMetricsConfiguration,
          [],
          {
            #bucket: bucket,
            #id: id,
            #metricsConfiguration: metricsConfiguration,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketNotification({
    required String? bucket,
    required _i2.NotificationConfigurationDeprecated? notificationConfiguration,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketNotification,
          [],
          {
            #bucket: bucket,
            #notificationConfiguration: notificationConfiguration,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketNotificationConfiguration({
    required String? bucket,
    required _i2.NotificationConfiguration? notificationConfiguration,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketNotificationConfiguration,
          [],
          {
            #bucket: bucket,
            #notificationConfiguration: notificationConfiguration,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketOwnershipControls({
    required String? bucket,
    required _i2.OwnershipControls? ownershipControls,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketOwnershipControls,
          [],
          {
            #bucket: bucket,
            #ownershipControls: ownershipControls,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketPolicy({
    required String? bucket,
    required String? policy,
    bool? confirmRemoveSelfBucketAccess,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketPolicy,
          [],
          {
            #bucket: bucket,
            #policy: policy,
            #confirmRemoveSelfBucketAccess: confirmRemoveSelfBucketAccess,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketReplication({
    required String? bucket,
    required _i2.ReplicationConfiguration? replicationConfiguration,
    String? contentMD5,
    String? expectedBucketOwner,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketReplication,
          [],
          {
            #bucket: bucket,
            #replicationConfiguration: replicationConfiguration,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #token: token,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketRequestPayment({
    required String? bucket,
    required _i2.RequestPaymentConfiguration? requestPaymentConfiguration,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketRequestPayment,
          [],
          {
            #bucket: bucket,
            #requestPaymentConfiguration: requestPaymentConfiguration,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketTagging({
    required String? bucket,
    required _i2.Tagging? tagging,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketTagging,
          [],
          {
            #bucket: bucket,
            #tagging: tagging,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketVersioning({
    required String? bucket,
    required _i2.VersioningConfiguration? versioningConfiguration,
    String? contentMD5,
    String? expectedBucketOwner,
    String? mfa,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketVersioning,
          [],
          {
            #bucket: bucket,
            #versioningConfiguration: versioningConfiguration,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #mfa: mfa,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> putBucketWebsite({
    required String? bucket,
    required _i2.WebsiteConfiguration? websiteConfiguration,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBucketWebsite,
          [],
          {
            #bucket: bucket,
            #websiteConfiguration: websiteConfiguration,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.PutObjectOutput> putObject({
    required String? bucket,
    required String? key,
    _i2.ObjectCannedACL? acl,
    _i5.Uint8List? body,
    bool? bucketKeyEnabled,
    String? cacheControl,
    String? contentDisposition,
    String? contentEncoding,
    String? contentLanguage,
    int? contentLength,
    String? contentMD5,
    String? contentType,
    String? expectedBucketOwner,
    DateTime? expires,
    String? grantFullControl,
    String? grantRead,
    String? grantReadACP,
    String? grantWriteACP,
    Map<String, String>? metadata,
    _i2.ObjectLockLegalHoldStatus? objectLockLegalHoldStatus,
    _i2.ObjectLockMode? objectLockMode,
    DateTime? objectLockRetainUntilDate,
    _i2.RequestPayer? requestPayer,
    String? sSECustomerAlgorithm,
    _i5.Uint8List? sSECustomerKey,
    String? sSECustomerKeyMD5,
    String? sSEKMSEncryptionContext,
    String? sSEKMSKeyId,
    _i2.ServerSideEncryption? serverSideEncryption,
    _i2.StorageClass? storageClass,
    String? tagging,
    String? websiteRedirectLocation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putObject,
          [],
          {
            #bucket: bucket,
            #key: key,
            #acl: acl,
            #body: body,
            #bucketKeyEnabled: bucketKeyEnabled,
            #cacheControl: cacheControl,
            #contentDisposition: contentDisposition,
            #contentEncoding: contentEncoding,
            #contentLanguage: contentLanguage,
            #contentLength: contentLength,
            #contentMD5: contentMD5,
            #contentType: contentType,
            #expectedBucketOwner: expectedBucketOwner,
            #expires: expires,
            #grantFullControl: grantFullControl,
            #grantRead: grantRead,
            #grantReadACP: grantReadACP,
            #grantWriteACP: grantWriteACP,
            #metadata: metadata,
            #objectLockLegalHoldStatus: objectLockLegalHoldStatus,
            #objectLockMode: objectLockMode,
            #objectLockRetainUntilDate: objectLockRetainUntilDate,
            #requestPayer: requestPayer,
            #sSECustomerAlgorithm: sSECustomerAlgorithm,
            #sSECustomerKey: sSECustomerKey,
            #sSECustomerKeyMD5: sSECustomerKeyMD5,
            #sSEKMSEncryptionContext: sSEKMSEncryptionContext,
            #sSEKMSKeyId: sSEKMSKeyId,
            #serverSideEncryption: serverSideEncryption,
            #storageClass: storageClass,
            #tagging: tagging,
            #websiteRedirectLocation: websiteRedirectLocation,
          },
        ),
        returnValue:
            _i4.Future<_i2.PutObjectOutput>.value(_FakePutObjectOutput_49(
          this,
          Invocation.method(
            #putObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #acl: acl,
              #body: body,
              #bucketKeyEnabled: bucketKeyEnabled,
              #cacheControl: cacheControl,
              #contentDisposition: contentDisposition,
              #contentEncoding: contentEncoding,
              #contentLanguage: contentLanguage,
              #contentLength: contentLength,
              #contentMD5: contentMD5,
              #contentType: contentType,
              #expectedBucketOwner: expectedBucketOwner,
              #expires: expires,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWriteACP: grantWriteACP,
              #metadata: metadata,
              #objectLockLegalHoldStatus: objectLockLegalHoldStatus,
              #objectLockMode: objectLockMode,
              #objectLockRetainUntilDate: objectLockRetainUntilDate,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #sSEKMSEncryptionContext: sSEKMSEncryptionContext,
              #sSEKMSKeyId: sSEKMSKeyId,
              #serverSideEncryption: serverSideEncryption,
              #storageClass: storageClass,
              #tagging: tagging,
              #websiteRedirectLocation: websiteRedirectLocation,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.PutObjectOutput>.value(_FakePutObjectOutput_49(
          this,
          Invocation.method(
            #putObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #acl: acl,
              #body: body,
              #bucketKeyEnabled: bucketKeyEnabled,
              #cacheControl: cacheControl,
              #contentDisposition: contentDisposition,
              #contentEncoding: contentEncoding,
              #contentLanguage: contentLanguage,
              #contentLength: contentLength,
              #contentMD5: contentMD5,
              #contentType: contentType,
              #expectedBucketOwner: expectedBucketOwner,
              #expires: expires,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWriteACP: grantWriteACP,
              #metadata: metadata,
              #objectLockLegalHoldStatus: objectLockLegalHoldStatus,
              #objectLockMode: objectLockMode,
              #objectLockRetainUntilDate: objectLockRetainUntilDate,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #sSEKMSEncryptionContext: sSEKMSEncryptionContext,
              #sSEKMSKeyId: sSEKMSKeyId,
              #serverSideEncryption: serverSideEncryption,
              #storageClass: storageClass,
              #tagging: tagging,
              #websiteRedirectLocation: websiteRedirectLocation,
            },
          ),
        )),
      ) as _i4.Future<_i2.PutObjectOutput>);

  @override
  _i4.Future<_i2.PutObjectAclOutput> putObjectAcl({
    required String? bucket,
    required String? key,
    _i2.ObjectCannedACL? acl,
    _i2.AccessControlPolicy? accessControlPolicy,
    String? contentMD5,
    String? expectedBucketOwner,
    String? grantFullControl,
    String? grantRead,
    String? grantReadACP,
    String? grantWrite,
    String? grantWriteACP,
    _i2.RequestPayer? requestPayer,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putObjectAcl,
          [],
          {
            #bucket: bucket,
            #key: key,
            #acl: acl,
            #accessControlPolicy: accessControlPolicy,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #grantFullControl: grantFullControl,
            #grantRead: grantRead,
            #grantReadACP: grantReadACP,
            #grantWrite: grantWrite,
            #grantWriteACP: grantWriteACP,
            #requestPayer: requestPayer,
            #versionId: versionId,
          },
        ),
        returnValue:
            _i4.Future<_i2.PutObjectAclOutput>.value(_FakePutObjectAclOutput_50(
          this,
          Invocation.method(
            #putObjectAcl,
            [],
            {
              #bucket: bucket,
              #key: key,
              #acl: acl,
              #accessControlPolicy: accessControlPolicy,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWrite: grantWrite,
              #grantWriteACP: grantWriteACP,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.PutObjectAclOutput>.value(_FakePutObjectAclOutput_50(
          this,
          Invocation.method(
            #putObjectAcl,
            [],
            {
              #bucket: bucket,
              #key: key,
              #acl: acl,
              #accessControlPolicy: accessControlPolicy,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #grantFullControl: grantFullControl,
              #grantRead: grantRead,
              #grantReadACP: grantReadACP,
              #grantWrite: grantWrite,
              #grantWriteACP: grantWriteACP,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.PutObjectAclOutput>);

  @override
  _i4.Future<_i2.PutObjectLegalHoldOutput> putObjectLegalHold({
    required String? bucket,
    required String? key,
    String? contentMD5,
    String? expectedBucketOwner,
    _i2.ObjectLockLegalHold? legalHold,
    _i2.RequestPayer? requestPayer,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putObjectLegalHold,
          [],
          {
            #bucket: bucket,
            #key: key,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #legalHold: legalHold,
            #requestPayer: requestPayer,
            #versionId: versionId,
          },
        ),
        returnValue: _i4.Future<_i2.PutObjectLegalHoldOutput>.value(
            _FakePutObjectLegalHoldOutput_51(
          this,
          Invocation.method(
            #putObjectLegalHold,
            [],
            {
              #bucket: bucket,
              #key: key,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #legalHold: legalHold,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.PutObjectLegalHoldOutput>.value(
                _FakePutObjectLegalHoldOutput_51(
          this,
          Invocation.method(
            #putObjectLegalHold,
            [],
            {
              #bucket: bucket,
              #key: key,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #legalHold: legalHold,
              #requestPayer: requestPayer,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.PutObjectLegalHoldOutput>);

  @override
  _i4.Future<_i2.PutObjectLockConfigurationOutput> putObjectLockConfiguration({
    required String? bucket,
    String? contentMD5,
    String? expectedBucketOwner,
    _i2.ObjectLockConfiguration? objectLockConfiguration,
    _i2.RequestPayer? requestPayer,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putObjectLockConfiguration,
          [],
          {
            #bucket: bucket,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #objectLockConfiguration: objectLockConfiguration,
            #requestPayer: requestPayer,
            #token: token,
          },
        ),
        returnValue: _i4.Future<_i2.PutObjectLockConfigurationOutput>.value(
            _FakePutObjectLockConfigurationOutput_52(
          this,
          Invocation.method(
            #putObjectLockConfiguration,
            [],
            {
              #bucket: bucket,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #objectLockConfiguration: objectLockConfiguration,
              #requestPayer: requestPayer,
              #token: token,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.PutObjectLockConfigurationOutput>.value(
                _FakePutObjectLockConfigurationOutput_52(
          this,
          Invocation.method(
            #putObjectLockConfiguration,
            [],
            {
              #bucket: bucket,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #objectLockConfiguration: objectLockConfiguration,
              #requestPayer: requestPayer,
              #token: token,
            },
          ),
        )),
      ) as _i4.Future<_i2.PutObjectLockConfigurationOutput>);

  @override
  _i4.Future<_i2.PutObjectRetentionOutput> putObjectRetention({
    required String? bucket,
    required String? key,
    bool? bypassGovernanceRetention,
    String? contentMD5,
    String? expectedBucketOwner,
    _i2.RequestPayer? requestPayer,
    _i2.ObjectLockRetention? retention,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putObjectRetention,
          [],
          {
            #bucket: bucket,
            #key: key,
            #bypassGovernanceRetention: bypassGovernanceRetention,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #requestPayer: requestPayer,
            #retention: retention,
            #versionId: versionId,
          },
        ),
        returnValue: _i4.Future<_i2.PutObjectRetentionOutput>.value(
            _FakePutObjectRetentionOutput_53(
          this,
          Invocation.method(
            #putObjectRetention,
            [],
            {
              #bucket: bucket,
              #key: key,
              #bypassGovernanceRetention: bypassGovernanceRetention,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #retention: retention,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.PutObjectRetentionOutput>.value(
                _FakePutObjectRetentionOutput_53(
          this,
          Invocation.method(
            #putObjectRetention,
            [],
            {
              #bucket: bucket,
              #key: key,
              #bypassGovernanceRetention: bypassGovernanceRetention,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #retention: retention,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.PutObjectRetentionOutput>);

  @override
  _i4.Future<_i2.PutObjectTaggingOutput> putObjectTagging({
    required String? bucket,
    required String? key,
    required _i2.Tagging? tagging,
    String? contentMD5,
    String? expectedBucketOwner,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putObjectTagging,
          [],
          {
            #bucket: bucket,
            #key: key,
            #tagging: tagging,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #versionId: versionId,
          },
        ),
        returnValue: _i4.Future<_i2.PutObjectTaggingOutput>.value(
            _FakePutObjectTaggingOutput_54(
          this,
          Invocation.method(
            #putObjectTagging,
            [],
            {
              #bucket: bucket,
              #key: key,
              #tagging: tagging,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.PutObjectTaggingOutput>.value(
            _FakePutObjectTaggingOutput_54(
          this,
          Invocation.method(
            #putObjectTagging,
            [],
            {
              #bucket: bucket,
              #key: key,
              #tagging: tagging,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.PutObjectTaggingOutput>);

  @override
  _i4.Future<void> putPublicAccessBlock({
    required String? bucket,
    required _i2.PublicAccessBlockConfiguration? publicAccessBlockConfiguration,
    String? contentMD5,
    String? expectedBucketOwner,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putPublicAccessBlock,
          [],
          {
            #bucket: bucket,
            #publicAccessBlockConfiguration: publicAccessBlockConfiguration,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.RestoreObjectOutput> restoreObject({
    required String? bucket,
    required String? key,
    String? expectedBucketOwner,
    _i2.RequestPayer? requestPayer,
    _i2.RestoreRequest? restoreRequest,
    String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreObject,
          [],
          {
            #bucket: bucket,
            #key: key,
            #expectedBucketOwner: expectedBucketOwner,
            #requestPayer: requestPayer,
            #restoreRequest: restoreRequest,
            #versionId: versionId,
          },
        ),
        returnValue: _i4.Future<_i2.RestoreObjectOutput>.value(
            _FakeRestoreObjectOutput_55(
          this,
          Invocation.method(
            #restoreObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #restoreRequest: restoreRequest,
              #versionId: versionId,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.RestoreObjectOutput>.value(
            _FakeRestoreObjectOutput_55(
          this,
          Invocation.method(
            #restoreObject,
            [],
            {
              #bucket: bucket,
              #key: key,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #restoreRequest: restoreRequest,
              #versionId: versionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.RestoreObjectOutput>);

  @override
  _i4.Future<_i2.SelectObjectContentOutput> selectObjectContent({
    required String? bucket,
    required String? expression,
    required _i2.ExpressionType? expressionType,
    required _i2.InputSerialization? inputSerialization,
    required String? key,
    required _i2.OutputSerialization? outputSerialization,
    String? expectedBucketOwner,
    _i2.RequestProgress? requestProgress,
    String? sSECustomerAlgorithm,
    _i5.Uint8List? sSECustomerKey,
    String? sSECustomerKeyMD5,
    _i2.ScanRange? scanRange,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectObjectContent,
          [],
          {
            #bucket: bucket,
            #expression: expression,
            #expressionType: expressionType,
            #inputSerialization: inputSerialization,
            #key: key,
            #outputSerialization: outputSerialization,
            #expectedBucketOwner: expectedBucketOwner,
            #requestProgress: requestProgress,
            #sSECustomerAlgorithm: sSECustomerAlgorithm,
            #sSECustomerKey: sSECustomerKey,
            #sSECustomerKeyMD5: sSECustomerKeyMD5,
            #scanRange: scanRange,
          },
        ),
        returnValue: _i4.Future<_i2.SelectObjectContentOutput>.value(
            _FakeSelectObjectContentOutput_56(
          this,
          Invocation.method(
            #selectObjectContent,
            [],
            {
              #bucket: bucket,
              #expression: expression,
              #expressionType: expressionType,
              #inputSerialization: inputSerialization,
              #key: key,
              #outputSerialization: outputSerialization,
              #expectedBucketOwner: expectedBucketOwner,
              #requestProgress: requestProgress,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #scanRange: scanRange,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.SelectObjectContentOutput>.value(
                _FakeSelectObjectContentOutput_56(
          this,
          Invocation.method(
            #selectObjectContent,
            [],
            {
              #bucket: bucket,
              #expression: expression,
              #expressionType: expressionType,
              #inputSerialization: inputSerialization,
              #key: key,
              #outputSerialization: outputSerialization,
              #expectedBucketOwner: expectedBucketOwner,
              #requestProgress: requestProgress,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
              #scanRange: scanRange,
            },
          ),
        )),
      ) as _i4.Future<_i2.SelectObjectContentOutput>);

  @override
  _i4.Future<_i2.UploadPartOutput> uploadPart({
    required String? bucket,
    required String? key,
    required int? partNumber,
    required String? uploadId,
    _i5.Uint8List? body,
    int? contentLength,
    String? contentMD5,
    String? expectedBucketOwner,
    _i2.RequestPayer? requestPayer,
    String? sSECustomerAlgorithm,
    _i5.Uint8List? sSECustomerKey,
    String? sSECustomerKeyMD5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadPart,
          [],
          {
            #bucket: bucket,
            #key: key,
            #partNumber: partNumber,
            #uploadId: uploadId,
            #body: body,
            #contentLength: contentLength,
            #contentMD5: contentMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #requestPayer: requestPayer,
            #sSECustomerAlgorithm: sSECustomerAlgorithm,
            #sSECustomerKey: sSECustomerKey,
            #sSECustomerKeyMD5: sSECustomerKeyMD5,
          },
        ),
        returnValue:
            _i4.Future<_i2.UploadPartOutput>.value(_FakeUploadPartOutput_57(
          this,
          Invocation.method(
            #uploadPart,
            [],
            {
              #bucket: bucket,
              #key: key,
              #partNumber: partNumber,
              #uploadId: uploadId,
              #body: body,
              #contentLength: contentLength,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.UploadPartOutput>.value(_FakeUploadPartOutput_57(
          this,
          Invocation.method(
            #uploadPart,
            [],
            {
              #bucket: bucket,
              #key: key,
              #partNumber: partNumber,
              #uploadId: uploadId,
              #body: body,
              #contentLength: contentLength,
              #contentMD5: contentMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
            },
          ),
        )),
      ) as _i4.Future<_i2.UploadPartOutput>);

  @override
  _i4.Future<_i2.UploadPartCopyOutput> uploadPartCopy({
    required String? bucket,
    required String? copySource,
    required String? key,
    required int? partNumber,
    required String? uploadId,
    String? copySourceIfMatch,
    DateTime? copySourceIfModifiedSince,
    String? copySourceIfNoneMatch,
    DateTime? copySourceIfUnmodifiedSince,
    String? copySourceRange,
    String? copySourceSSECustomerAlgorithm,
    _i5.Uint8List? copySourceSSECustomerKey,
    String? copySourceSSECustomerKeyMD5,
    String? expectedBucketOwner,
    String? expectedSourceBucketOwner,
    _i2.RequestPayer? requestPayer,
    String? sSECustomerAlgorithm,
    _i5.Uint8List? sSECustomerKey,
    String? sSECustomerKeyMD5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadPartCopy,
          [],
          {
            #bucket: bucket,
            #copySource: copySource,
            #key: key,
            #partNumber: partNumber,
            #uploadId: uploadId,
            #copySourceIfMatch: copySourceIfMatch,
            #copySourceIfModifiedSince: copySourceIfModifiedSince,
            #copySourceIfNoneMatch: copySourceIfNoneMatch,
            #copySourceIfUnmodifiedSince: copySourceIfUnmodifiedSince,
            #copySourceRange: copySourceRange,
            #copySourceSSECustomerAlgorithm: copySourceSSECustomerAlgorithm,
            #copySourceSSECustomerKey: copySourceSSECustomerKey,
            #copySourceSSECustomerKeyMD5: copySourceSSECustomerKeyMD5,
            #expectedBucketOwner: expectedBucketOwner,
            #expectedSourceBucketOwner: expectedSourceBucketOwner,
            #requestPayer: requestPayer,
            #sSECustomerAlgorithm: sSECustomerAlgorithm,
            #sSECustomerKey: sSECustomerKey,
            #sSECustomerKeyMD5: sSECustomerKeyMD5,
          },
        ),
        returnValue: _i4.Future<_i2.UploadPartCopyOutput>.value(
            _FakeUploadPartCopyOutput_58(
          this,
          Invocation.method(
            #uploadPartCopy,
            [],
            {
              #bucket: bucket,
              #copySource: copySource,
              #key: key,
              #partNumber: partNumber,
              #uploadId: uploadId,
              #copySourceIfMatch: copySourceIfMatch,
              #copySourceIfModifiedSince: copySourceIfModifiedSince,
              #copySourceIfNoneMatch: copySourceIfNoneMatch,
              #copySourceIfUnmodifiedSince: copySourceIfUnmodifiedSince,
              #copySourceRange: copySourceRange,
              #copySourceSSECustomerAlgorithm: copySourceSSECustomerAlgorithm,
              #copySourceSSECustomerKey: copySourceSSECustomerKey,
              #copySourceSSECustomerKeyMD5: copySourceSSECustomerKeyMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #expectedSourceBucketOwner: expectedSourceBucketOwner,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.UploadPartCopyOutput>.value(
            _FakeUploadPartCopyOutput_58(
          this,
          Invocation.method(
            #uploadPartCopy,
            [],
            {
              #bucket: bucket,
              #copySource: copySource,
              #key: key,
              #partNumber: partNumber,
              #uploadId: uploadId,
              #copySourceIfMatch: copySourceIfMatch,
              #copySourceIfModifiedSince: copySourceIfModifiedSince,
              #copySourceIfNoneMatch: copySourceIfNoneMatch,
              #copySourceIfUnmodifiedSince: copySourceIfUnmodifiedSince,
              #copySourceRange: copySourceRange,
              #copySourceSSECustomerAlgorithm: copySourceSSECustomerAlgorithm,
              #copySourceSSECustomerKey: copySourceSSECustomerKey,
              #copySourceSSECustomerKeyMD5: copySourceSSECustomerKeyMD5,
              #expectedBucketOwner: expectedBucketOwner,
              #expectedSourceBucketOwner: expectedSourceBucketOwner,
              #requestPayer: requestPayer,
              #sSECustomerAlgorithm: sSECustomerAlgorithm,
              #sSECustomerKey: sSECustomerKey,
              #sSECustomerKeyMD5: sSECustomerKeyMD5,
            },
          ),
        )),
      ) as _i4.Future<_i2.UploadPartCopyOutput>);
}
